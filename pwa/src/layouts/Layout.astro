---
import { pwaInfo } from 'virtual:pwa-info'

import SplashScreens from '@components/SplashScreens.astro'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html class="dark" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <style is:global>
      :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
        --scrollbar: #e5e5e5;
        --scrollbar-thumb: #c0c0c0;
        --scrollbar-thumb-hover: #909090;
        --scrollbar-dark: #898989;
        --scrollbar-thumb-dark: #5d5d5d;
        --scrollbar-thumb-hover-dark: #3f3f3f;
      }

      html {
        font-family: system-ui, sans-serif;
        background: #13151a;
        background-size: 224px;
      }

      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }

      body::-webkit-scrollbar {
        width: 7px;
        height: 7px;
        background: var(--scrollbar);
        transition: background 150ms cubic-bezier(0.4, 0, 0.2, 1);
        will-change: background;
      }

      body::-webkit-scrollbar-thumb {
        background: var(--scrollbar-thumb);
        border-radius: 0.25rem;
      }

      @media (any-hover: hover) {
        body::-webkit-scrollbar-thumb:hover {
          background: var(--scrollbar-thumb-hover);
        }
      }

      html.dark body::-webkit-scrollbar {
        background: var(--scrollbar-dark);
        transition: background 150ms cubic-bezier(0.4, 0, 0.2, 1);
        will-change: background;
      }

      html.dark body::-webkit-scrollbar-thumb {
        background: var(--scrollbar-thumb-dark);
      }

      @media (any-hover: hover) {
        html.dark body::-webkit-scrollbar-thumb:hover {
          background: var(--scrollbar-thumb-hover-dark);
        }
      }

      @supports not selector(::-webkit-scrollbar) {
        html,
        body {
          scrollbar-color: var(--scrollbar) var(--scrollbar-thumb);
          scrollbar-width: thin;
          scrollbar-gutter: stable;
        }

        html.dark,
        html.dark body {
          scrollbar-color: var(--scrollbar-dark) var(--scrollbar-thumb-dark);
        }
      }
    </style>
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
    <script src="/src/scripts/pwa.ts"></script>
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />
    <meta name="apple-touch-fullscreen" content="yes" />
    <meta name="apple-mobile-web-app-title" content="Web App" />
    <meta name="application-name" content="Web App" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="mobile-web-app-capable" content="yes" />
    <SplashScreens />
  </head>
  <body>
    <slot />
  </body>
</html>
